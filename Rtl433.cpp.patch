--- org/hardware/Rtl433.cpp	2020-04-26 15:49:25.000000000 +0200
+++ mod/hardware/Rtl433.cpp	2020-06-07 14:33:21.047562891 +0200
@@ -183,6 +183,10 @@
 	bool haveSequence = false;
 	int sequence = 0;
 
+// rtl_433 uses automatic gain, better to use SNR instead of RSSI to report received RF Signal quality
+// Set to 12 as default. Will in such case display "-"
+	int snr = 12;
+
 	if (!data["id"].empty())
 	{
 		id = atoi(data["id"].c_str());
@@ -299,6 +303,18 @@
 		}
 	}
 
+	if (FindField(data, "snr"))
+        {
+		/* Map the received Signal to Noise Ratio to the domoticz RSSI field that is 4 bit only.
+		   rtl_433 will not be able to decode a signal with less snr than 4dB or so, why we map snr<5 to rssi=0 .
+		   We use better resolution at low snr. snr=5-10 map to rssi=1-6, snr=11-20 map to rssi=6-11, snr>20 map to rssi=11
+		*/
+                snr = (atoi(data["snr"].c_str()))-4;
+		if (snr > 5) snr -= (int)(snr-5)/2;
+		if (snr > 11) snr = 11; // Domoticz RSSI field can only be 0-11
+		if (snr < 0) snr = 0; // In case snr actually was below 4 dB
+	}
+
 	std::string model = data["model"]; // new model format normalized from the 201 different devices presently supported by rtl_433
 
 	bool hasstate = FindField(data, "state") || FindField(data, "command");
@@ -316,7 +332,7 @@
 			batterylevel,
 			state,
 			0,
-			model);
+			model, snr);
 		return true;
 	}
 
@@ -334,51 +350,51 @@
 	if (haveTemp && haveHumidity && havePressure)
 	{
 		int iForecast = 0;
-		SendTempHumBaroSensor(sensoridx, batterylevel, tempC, humidity, pressure, iForecast, model);
+		SendTempHumBaroSensor(sensoridx, batterylevel, tempC, humidity, pressure, iForecast, model, snr);
 		bHandled = true;
 	}
 	else if (haveTemp && haveHumidity)
 	{
-		SendTempHumSensor(sensoridx, batterylevel, tempC, humidity, model);
+		SendTempHumSensor(sensoridx, batterylevel, tempC, humidity, model, snr);
 		bHandled = true;
 	}
 	else 
 	{
 		if (haveTemp)
 		{
-			SendTempSensor(sensoridx, batterylevel, tempC, model);
+			SendTempSensor(sensoridx, batterylevel, tempC, model, snr);
 			bHandled = true;
 		}
 		if (haveHumidity)
 		{
-			SendHumiditySensor(sensoridx, batterylevel, humidity, model);
+			SendHumiditySensor(sensoridx, batterylevel, humidity, model, snr);
 			bHandled = true;
 		}
 	}
 	if (haveWind_Speed || haveWind_Gust || haveWind_Dir)
 	{
-		SendWind(sensoridx, batterylevel, wind_dir, wind_speed, wind_gust, tempC, 0, haveTemp, false, model);
+		SendWind(sensoridx, batterylevel, wind_dir, wind_speed, wind_gust, tempC, 0, haveTemp, false, model, snr);
 		bHandled = true;
 	}
 	if (haveRain)
 	{
-		SendRainSensor(sensoridx, batterylevel, rain, model);
+		SendRainSensor(sensoridx, batterylevel, rain, model, snr);
 		bHandled = true;
 	}
 	if (haveDepth)
 	{
-		SendDistanceSensor(sensoridx, unit, batterylevel, depth, model);
+		SendDistanceSensor(sensoridx, unit, batterylevel, depth, model, snr);
 		bHandled = true;
 	}
 	if (haveMoisture)
 	{
-		SendMoistureSensor(sensoridx, batterylevel, moisture, model);
+		SendMoistureSensor(sensoridx, batterylevel, moisture, model, snr);
 		bHandled = true;
 	}
 
 	if (havePower)
 	{
-		SendWattMeter((uint8_t)sensoridx, (uint8_t)unit, batterylevel, power, model);
+		SendWattMeter((uint8_t)sensoridx, (uint8_t)unit, batterylevel, power, model, snr);
 		bHandled = true;
 	}
 	if (haveEnergy && havePower)
@@ -386,7 +402,7 @@
 		//can remove this comment : _log.Log(LOG_STATUS, "Rtl433: : CM180 haveSequence(%d) sensoridx(%d) havePower(%d) haveEnergy(%d))", haveSequence, sensoridx, havePower, haveEnergy);
 		sensoridx = sensoridx + 1;
 		//can rmeove this comment : _log.Log(LOG_STATUS, "Rtl433: : CM180 sensoridx(%d) unit(%d) batterylevel(%d) power(%f) energy(%f) model(%s)", sensoridx, unit, batterylevel, power, energy, model.c_str());
-		SendKwhMeter(sensoridx, unit, batterylevel, power, energy, model);
+		SendKwhMeter(sensoridx, unit, batterylevel, power, energy, model, snr);
 		bHandled = true;
 	}
 
@@ -410,7 +426,7 @@
 		std::string headerLine = "";
 		m_sLastLine = "";
 
-		std::string szFlags = "-F csv -M newmodel -C si " + m_cmdline; // newmodel used (-M newmodel) and international system used (-C si) -f 433.92e6 -f 868.24e6 -H 60 -d 0
+		std::string szFlags = "-F csv -M newmodel -C si -M level " + m_cmdline; // newmodel used (-M newmodel) and international system used (-C si) -f 433.92e6 -f 868.24e6 -H 60 -d 0
 #ifdef WIN32
 		std::string szCommand = "C:\\rtl_433.exe " + szFlags;
 		m_hPipe = _popen(szCommand.c_str(), "r");
